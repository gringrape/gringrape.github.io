{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/database/normilization/","result":{"data":{"markdownRemark":{"html":"<h2>정규화란 무엇일까?</h2>\n<p>정규화의 목적은 데이터 중복을 줄이고 정합성(integrity)을 높이는 것이다.</p>\n<h2>정규화를 하면 무엇이 좋을까?</h2>\n<p>데이터 중복 측면에서는, 공간 절약과 유지보수를 이야기 할 수가 있다. 데이터가 여러 테이블에 중복되어 존재하는 경우에는 데이터 수정시에 중복된 모든 곳을 찾아서 고쳐주어야 하는 어려움이 있다. 예를 들어, 고객과 관련된 데이터가 오직 <code>Customer</code>라는 테이블에만 존재한다면, 수정이 용이할 것이다.</p>\n<p>데이터 정규화는 <code>inconsistent dependency</code>를 줄여주는 효과도 있다. 예를 들어, <code>Customer</code>와 <code>Employee</code>라고 하는 테이블이 존재한다면, 급여에 관한 정보는 <code>Employee</code>에서 찾는 편이 더 직관적일 것이다. 데이터 정합성을 높이면, 특정한 데이터에 쉽게 접근할 수 있는 논리적 구조를 만들 수 있게 된다.</p>\n<h2>정규화의 방법</h2>\n<h2>정규화를 해서 안좋은 점이 있을까?</h2>\n<p>대량의 데이터를 다루는 경우에 조회에서 성능 문제가 생길 수 있다. 정규화된 데이터베이스에 새로운 데이터를 쓰는 상황에서는 정규화가 이득이 된다. 중복된 데이터가 최소화 되므로, 빠른 속도로 쓸 수 있게 된다. 하지만, 조회의 경우에는 사정이 다르다.</p>\n<p>조회의 경우, 정규화된 데이터베이스에서 여러 데이터를 읽기 위해서는 <code>JOIN</code>을 이용해야 한다. <code>JOIN</code> 연산을 사용하기 때문에 성능상의 단점을 갖게 된다.</p>\n<h2>안좋은점에 대한 해결책이나 대안에는 무엇이 있을까?</h2>\n<p>조회와 수정을 처리하는 데이터베이스를 나눠 놓는 것이 도움이 된다. 조회용은 정규화되지 않은 데이터를 사용해서 속도를 확보하고, 수정용은 정규화된 것을 사용해서 데이터 정합성을 확보하는 전략을 세울 수 있다. 이 같은 전략을 CQRS라고 한다.</p>\n<h2>참고</h2>\n<ul>\n<li>데이터베이스 정규화의 정의 <a href=\"https://en.wikipedia.org/wiki/Database_normalization\">https://en.wikipedia.org/wiki/Database_normalization</a></li>\n<li>정규화의 장점 <a href=\"https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description\">https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description</a></li>\n<li>정규화의 단점 <a href=\"https://blog.risingstack.com/when-to-use-cqrs/\">https://blog.risingstack.com/when-to-use-cqrs/</a></li>\n<li>정규화의 방법 <a href=\"https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description\">https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description</a></li>\n</ul>","frontmatter":{"slug":"/database/normilization","title":"데이터베이스 정규화"}}},"pageContext":{"id":"6f0f9938-dfb8-5132-b0aa-4c0e7785a35f","frontmatter__slug":"/database/normilization","__params":{"frontmatter__slug":"database"}}},"staticQueryHashes":[]}