{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/java/final-keyword/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>기능\n<ul>\n<li>final 이 붙은 클래스는 확장 할 수 없다.</li>\n<li>final 이 붙은 메서드는 상속에서 재정의 될 수 없다.</li>\n</ul>\n</li>\n<li>의도\n<ul>\n<li>원래 정의된 규약을 깨뜨리지 않게 해준다.</li>\n<li>클래스 전체를 final로 규정한다면, 전체 거동이 고정되고, 새로운 기능도 추가할 수 없다.</li>\n<li>메서드 단위에 final을 붙이면 해당 메서드는 원래 구현 상세에 안정적으로 의존할 수 있게 된다. class에 붙이는 것과 다르게 기능을 추가할 수 있는 유연성을 확보할 수 있다.</li>\n</ul>\n</li>\n<li>성능상의 이점\n<ul>\n<li>final을 class 단위에 붙였을 때, 알려진 성능상의 이점은 없다.</li>\n</ul>\n</li>\n<li>실무\n<ul>\n<li>의도하지 않은 변경을 막는 역할을 한다.</li>\n<li>final이 붙는 것을 기본으로 하고, 변경되는 경우를 예외로 하는 경우도 많다.</li>\n</ul>\n</li>\n</ul>\n<h2>참고</h2>\n<ul>\n<li>The Java Programming Language, 4th Edition - <a href=\"https://amazon.com/Java-Programming-Language-4th/dp/0321349806\">https://amazon.com/Java-Programming-Language-4th/dp/0321349806</a></li>\n<li>final 키워드의 성능상의 이점 - <a href=\"https://www.baeldung.com/java-final-performance\">https://www.baeldung.com/java-final-performance</a></li>\n</ul>","frontmatter":{"slug":"/java/final-keyword","title":"Java final keyword의 의의"}}},"pageContext":{"id":"6ce579e7-35fb-5d4e-85cf-0a1a24b0b27c","frontmatter__slug":"/java/final-keyword","__params":{"frontmatter__slug":"java"}}},"staticQueryHashes":[]}