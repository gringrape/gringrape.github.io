{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/ctci/1-7/","result":{"data":{"markdownRemark":{"html":"<h2>문제 출처</h2>\n<p>코딩인터뷰 완전 분석 6/E 1-7</p>\n<h2>문제 해설</h2>\n<p><code>m x n</code> 행렬이 주어질때, 시계방향으로 90도 회전한 행렬을 구하는 문제이다.</p>\n<h2>회전 규칙</h2>\n<p>몇개의 구체적 사례를 통해서, 회전에 대한 일반적인 규칙을 찾아낼 수 있다. <code>i</code>행 <code>j</code>열에 위치한 행렬 원소는 시계방향으로 90도 회전후에 다음 위치에 가게 된다.</p>\n<pre><code>(i, j) -> (j, N - i)\n</code></pre>\n<p>회전된 행렬을 구하기 위해서는, 원래의 행렬과 같은 크기의 행렬을 만들고, 회전 규칙에 따라 원소를 새로운 곳으로 옮기면 된다.</p>\n<pre><code class=\"language-java\">b[i][j] = a[j][N-i];\n</code></pre>\n<h2>새로운 행렬을 생성하지 않고 풀이</h2>\n<p>새로운 행렬을 사용하지 않으려면, <code>swap</code>연산을 해줄 필요가 있다. 하나의 값을 임시로 저장해 놓고, 회전 반경에 위치한 모든 원소들의 위치를 바꾸어 주면 된다.</p>\n<h3>풀이 코드</h3>\n<p><a href=\"https://github.com/gringrape/coding-life/blob/main/20220925/ctci-1-7-python/test_rotate.py\">https://github.com/gringrape/coding-life/blob/main/20220925/ctci-1-7-python/test_rotate.py</a></p>","frontmatter":{"slug":"/ctci/1-7","title":"행렬 회전"}}},"pageContext":{"id":"8725d803-8c9d-57d8-a289-acf77c183ed1","frontmatter__slug":"/ctci/1-7","__params":{"frontmatter__slug":"ctci"}}},"staticQueryHashes":[]}