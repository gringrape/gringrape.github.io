{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/blog/blog-setup/","result":{"data":{"markdownRemark":{"html":"<h1>블로그 만들기</h1>\n<h2>왜 블로그를 만들어야 할까?</h2>\n<ul>\n<li>공개되는 형태로 지식을 정리하고 싶다.</li>\n<li>이미 블로그를 운영하고 있지만, 정말 외부용이다. 일상적인 지식 습득에도 도움이 되는 것을 만들고 싶다.</li>\n<li>지식 습득은 정리 + 수정이다. 특히나 수정이 엄청 중요하다. 그래서 수정에 드는 노력을 최대한 줄여줄 수 있는 도구를 만들면 좋다.</li>\n</ul>\n<h2>왜 직접 만들어야 할까?</h2>\n<ul>\n<li>결국 내가 원하는 것은 지식의 수정이 용이한 도구다.</li>\n<li>이것을 어떻게 만들지는 정해져있지 않다. 즉, 커스텀이 필요하다.</li>\n<li>다행히 나는 프론트엔드 작업에 꽤 익숙하다. 구성비용이 엄청 크지 않다.</li>\n</ul>\n<h2>기술 구성</h2>\n<p>VimWiki + Gatsby</p>\n<h3>VimWiki</h3>\n<p>개인 위키이기 때문에 문서 생성과 링크가 용이하다.\n지금 원하는 것도 지식의 정리와 연결이기 때문에 적격인 도구다.</p>\n<h3>Gatsby</h3>\n<p>Jekyll 도 괜찮지만,\nliquid 문법이 마음에 들지 않았고,\nReact를 기반으로 하고 있는 Gatsby 를 사용하기로 했다.</p>\n<h2>필요한 기능</h2>\n<ul>\n<li>글 목록, 작성 시간순으로 정렬 된 것.</li>\n<li>글 랜덤으로 5개 보여주기.</li>\n<li>글 수정 기능(수정하기 말도 안되게 편해야 함)</li>\n<li>인덱스</li>\n</ul>\n<h2>설치 작업</h2>\n<h3>VimWiki 설치</h3>\n<p><a href=\"https://github.com/vimwiki/vimwiki\">https://github.com/vimwiki/vimwiki</a>\n<code>vim-plug</code></p>\n<pre><code>Plug 'vimwiki/vimwiki'\n</code></pre>\n<h3>vim-startify 설치</h3>\n<p><a href=\"https://github.com/mhinz/vim-startify\">https://github.com/mhinz/vim-startify</a>\n<code>vim-plug</code></p>\n<pre><code>Plug 'mhinz/vim-startify'\n</code></pre>\n<h3>Gatsby 프로젝트 생성</h3>\n<p><a href=\"https://www.npmjs.com/package/gatsby\">https://www.npmjs.com/package/gatsby</a></p>\n<pre><code>npm install -g gatsby-cli\ngatsby new\n</code></pre>\n<p><code>jsx-runtime</code> 설정\n<a href=\"https://www.gatsbyjs.com/docs/reference/release-notes/v4.1/#jsx-runtime-options-in-gatsby-configjs\">https://www.gatsbyjs.com/docs/reference/release-notes/v4.1/#jsx-runtime-options-in-gatsby-configjs</a></p>\n<p>참고:\n<a href=\"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\">https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html</a></p>\n<h2>글 목록 보여주기</h2>\n<ul>\n<li>render markdown file</li>\n<li>생성 날짜 순으로 정렬</li>\n<li>글 간의 링크 처리</li>\n</ul>\n<h3>markdown page 표시하기</h3>\n<p><a href=\"https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/\">https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/</a></p>\n<ol>\n<li>플러그인 설치</li>\n</ol>\n<p>{{{bash\nnpm install gatsby-source-filesystem\n}}}</p>\n<p><code>gatsby.config.js</code>:</p>\n<pre><code class=\"language-javascript\">module.exports = {\n  siteMetadata: {\n    title: \"My Gatsby Site\",\n  },\n  plugins: [\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `markdown-pages`,\n        path: `${__dirname}/src/markdown-pages`,\n      },\n    },\n  ],\n}\n</code></pre>\n<p>다음과 같은 쿼리를 작성하면 페이지 폴더의 마크다운 파일 목록을 볼 수 있다.</p>\n<pre><code class=\"language-graphql\">query AllFiles {\n  allFile {\n    nodes {\n      ctime\n      absolutePath\n    }\n  }\n}\n</code></pre>\n<ul>\n<li>마크다운 파일의 내용또한 올바르게 들어오는지 확인해야 함.</li>\n</ul>\n<ol start=\"2\">\n<li>VimWiki 에서 markdown 문법 사용</li>\n</ol>\n<ul>\n<li>일단은 syntax 를 markdown 으로 지정해 놓았다.</li>\n<li>이것이 싫은 경우는 syntax high-ligting을 custom 하게 줄 수 있다.\n=> 지금은 복잡도가 좀 높다 -> 하나씩 건드려 보아야 한다.</li>\n</ul>\n<ol start=\"3\">\n<li>Markdown => html transformer 지정</li>\n</ol>\n<ul>\n<li>transformer 를 활용한다.</li>\n<li>markdown 데이터 확인</li>\n</ul>\n<ol start=\"4\">\n<li>목록 보기</li>\n</ol>\n<ul>\n<li>글을 가져오기</li>\n</ul>\n<pre><code class=\"language-graphql\">query GetPosts {\n  allMarkdownRemark {\n    nodes {\n      id\n      frontmatter {\n\t\t\t\ttitle\n        slug\n      }\n    }\n  }\n}\n</code></pre>\n<ul>\n<li>글 제목을 보여 주기</li>\n</ul>\n<p>페이지에서 graphQL API로 데이터 쿼리하기\n<a href=\"https://www.gatsbyjs.com/docs/how-to/querying-data/page-query/\">https://www.gatsbyjs.com/docs/how-to/querying-data/page-query/</a></p>\n<ul>\n<li>index 파일이 제외되도록 처리</li>\n</ul>\n<ol start=\"5\">\n<li>목록 보기 - 작성 날짜 별로 정렬</li>\n</ol>\n<p>date 값을 비교해서 정렬한다.</p>\n<ol start=\"6\">\n<li>메타데이터 입력 자동화</li>\n</ol>\n<ul>\n<li>메타데이터가 자동으로 입력되도록 하기.</li>\n<li>메타데이터를 자동으로 작성하도록 설정.</li>\n<li>메타데이터(지금은 작성 날짜)가 작성시에 자동으로 기록되도록 하기.</li>\n</ul>\n<p>6-1. Vimscript 배우기 - <a href=\"https://learnvimscriptthehardway.stevelosh.com/\">https://learnvimscriptthehardway.stevelosh.com/</a></p>\n<ul>\n<li>calling function</li>\n<li>expression function</li>\n</ul>\n<p>6-2. URL을 얻기 위해 Vimscript 를 통해서 현재 경로 얻기\n<a href=\"https://vim.fandom.com/wiki/Get_the_name_of_the_current_file\">https://vim.fandom.com/wiki/Get_the_name_of_the_current_file</a></p>\n<p>6-3. 글 작성 시점에 함수가 실행되도록 해주기.</p>\n<pre><code class=\"language-vimscript\">autocmd BufRead,BufNewFile *blog/docs/*.md call NewTemplate()\n</code></pre>\n<p>BufRead\nBufNewFile</p>\n<ul>\n<li>질문 참고 - BufRead 이벤트는 무엇인가요?</li>\n</ul>\n<p><a href=\"https://stackoverflow.com/questions/15129517/what-is-the-difference-between-bufread-and-bufenter#:~:text=The%20BufRead%20event%20is%20triggered,buffer%20the%20cursor%20is%20in\">https://stackoverflow.com/questions/15129517/what-is-the-difference-between-bufread-and-bufenter#:~:text=The%20BufRead%20event%20is%20triggered,buffer%20the%20cursor%20is%20in</a>.</p>\n<p>Buffer 란 메모리 상의 하나의 파일을 뜻한다고 한다.\n즉, 하나의 파일을 Vim 에서 읽어왔을때 BufRead 이벤트가 발생.\nBufNewFile은 새로운 파일을 생성하는 시점인지, 아니면 새로운 파일을 젖아하는 시점인지 그것이 헷갈린다.</p>\n<ol start=\"7\">\n<li>상세 보기</li>\n</ol>\n<p><a href=\"https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/#create-a-collection-route-for-the-markdown-files\">https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/#create-a-collection-route-for-the-markdown-files</a></p>\n<ol start=\"8\">\n<li>\n<p>랜덤 목록 보기</p>\n</li>\n<li>\n<p>link 처리를 위한 transformer customize</p>\n</li>\n</ol>\n<ul>\n<li>어떻게 커스텀 할 수 있을까?</li>\n<li>문법을 바구는 과정에서 \"[[]]\"와 같은 기호들을 링크로 변환해야 함.</li>\n</ul>\n<p>기본적인 transformer 지정- <a href=\"https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/#transform-markdown-to-html-and-frontmatter-to-data-using-gatsby-transformer-remark\">https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/#transform-markdown-to-html-and-frontmatter-to-data-using-gatsby-transformer-remark</a></p>\n<p>custom 방법 -\n<a href=\"https://www.gatsbyjs.com/tutorial/remark-plugin-tutorial/\">https://www.gatsbyjs.com/tutorial/remark-plugin-tutorial/</a></p>\n<ol start=\"10\">\n<li>인덱스</li>\n</ol>\n<h2>글을 올릴때마다 재배포를 해야하는 불편함</h2>\n<p>리모트의 데이터 저장소를 활용할 수 있도록 함.</p>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/plugins/gatsby-source-git/\">https://www.gatsbyjs.com/plugins/gatsby-source-git/</a></li>\n</ul>\n<h2>기타 수정 사항 기록</h2>\n<h3>description 항목이 메타데이터 항목에 추가되도록 함.</h3>\n<p>글 생성시 템플릿에 자동으로 들어가도록 반영함.</p>\n<pre><code class=\"language-vimscript\">call add(l:template, 'description : ')\n</code></pre>","frontmatter":{"slug":"/blog/blog-setup","title":"VimWiki + Gatsby 블로그 만들기"}}},"pageContext":{"id":"1af54ae7-5504-51f5-ad47-8a0dd5482f65","frontmatter__slug":"/blog/blog-setup","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":[]}