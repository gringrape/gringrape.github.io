{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/algorithm/union-find/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>문제\n<ul>\n<li>두개의 지점이 서로 연결되어 있는지를 파악해야 한다.</li>\n</ul>\n</li>\n<li>모델링\n<ul>\n<li>두개의 퍼블릭 메서드를 가진 자료구조를 설계한다.</li>\n<li>union(a, b) 는 두 지점을 연결시키는 메서드이다.</li>\n<li>isConnected(a, b) 는 두 지점이 연결되어 있는지 (같은 connected component에 속하는지) 여부를 반환한다.</li>\n</ul>\n</li>\n<li>Quick union\n<ul>\n<li>노드 수 만큼의 배열을 준비한다.</li>\n<li>인덱스가 노드 번호이고 값은 노드가 속한 component의 대표 아이디이다.</li>\n<li>isConnected 연산은 단순하다. 서로 다른 두 노드가 같은 아이디를 가지면 연결된 상태이다.</li>\n<li>union 연산은 조금 더 복잡하다. 두 인덱스의 값을 하나로 통일시켜주고, 두 노드가 속한 컴포넌트 값을 가진 인덱스들을 모두가 같은 값으로 만들어야 한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"slug":"/algorithm/union-find","title":"union find 알고리즘에 대해 알아보자"}}},"pageContext":{"id":"a731203d-384b-538c-87de-55f7ff0fe763","frontmatter__slug":"/algorithm/union-find","__params":{"frontmatter__slug":"algorithm"}}},"staticQueryHashes":[]}