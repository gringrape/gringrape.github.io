{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/clean-code/ch-6/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>객체와 자료구조의 차이\n<ul>\n<li>객체는 추상화된 동작을 드러내고 자료(data)를 감춘다.</li>\n<li>자료구조는 자료를 드러낸다.</li>\n</ul>\n</li>\n<li>알맞은 연산\n<ul>\n<li>객체는 새로운 유형의 자료구조를 추가하는것이 쉽다. 반면에 기능추가가 어렵다.</li>\n<li>자료구조의 경우에는 새로운 기능을 추가하는 것이 쉽다. 반면에 새로운 유형의 추가는 어렵다.</li>\n</ul>\n</li>\n<li>디미터의 법칙 위반\n<ul>\n<li>디미터 법칙의 위반으로 나타나는 코드를 열차충돌 코드라고 부른다.</li>\n<li>디미터 법칙을 위반했는지 여부는 해당 클래스가 객체인지 아니면 자료구조인지 여부를 놓고 판단해야 한다.</li>\n</ul>\n</li>\n<li>잡종구조\n<ul>\n<li>중요한 것은 어떤 것을 객체로 사용하고, 자료구조로 사용할지 분명한 경계선이 있어야 한다는 사실이다.</li>\n<li>자료의 일부만을 추상화하여 동작으로 제공하는 반쪽짜리 객체 같은 경우에는, 기능의 추가와 객체 유형의 추가 모두 어려워지기 때문에, 둘을 반드시 구분하여 사용하여야 한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"slug":"/clean-code/ch-6","title":"객체와 자료구조"}}},"pageContext":{"id":"5059a211-7a78-52c6-a0fa-3c7e5d2b4222","frontmatter__slug":"/clean-code/ch-6","__params":{"frontmatter__slug":"clean-code"}}},"staticQueryHashes":[]}